import ch.ubique.gradle.preset.utils.PropertyUtilsKt

plugins {
	alias libs.plugins.android.application
	alias libs.plugins.kotlinAndroid
	alias libs.plugins.compose.compiler
	alias libs.plugins.ubique.alpaka
	alias libs.plugins.ubique.preset
}

android {
	namespace "ch.ubique.qrscanner.example"
	compileSdk 34

	defaultConfig {
		applicationId "ch.ubique.qrscanner.example"
		minSdk 23
		targetSdk 34
		versionCode 1
		versionName "1.0.0"

		testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

		alpakaUploadKey = System.getenv("ALPAKA_UPLOAD_KEY") ?: ""
	}

	productFlavors {
		prod {
			// Required for the Alpaka upload
		}
	}

	signingConfigs {
		ubique {
			storeFile file("keystore.jks")
			storePassword System.getenv("KEYSTORE_PASSWORD") ?: PropertyUtilsKt.readProperty(project, "storePassword")
			keyAlias System.getenv("KEY_ALIAS") ?: PropertyUtilsKt.readProperty(project, "keyAlias")
			keyPassword System.getenv("KEY_PASSWORD") ?: PropertyUtilsKt.readProperty(project, "keyPassword")
		}
	}

	buildTypes {
		release {
			signingConfig = signingConfigs.ubique
		}
	}

	buildFeatures {
		viewBinding true
		compose true
	}
}

dependencies {
	implementation project(':qrscanner-zxing')
	implementation project(':qrscanner-mlkit')
	implementation project(':qrscanner-compose')

	implementation libs.core.ktx
	implementation libs.material
	implementation libs.androidx.constraintlayout

	implementation platform(libs.compose.bom)
	implementation libs.compose.ui
	implementation libs.compose.ui.tooling
	implementation libs.compose.ui.unit
	implementation libs.compose.foundation
	implementation libs.compose.material

	testImplementation libs.junit
	androidTestImplementation libs.androidx.test.ext.junit
	androidTestImplementation libs.espresso.core
}